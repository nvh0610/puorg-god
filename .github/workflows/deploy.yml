name: Deploy to VPS

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/puorg-god-be:vps-${{ github.sha }}

  deploy:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install ssh key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          known_hosts: unnecessary

      - name: Remove old known hosts
        run: rm -f ~/.ssh/known_hosts

      - name: Adding known hosts
        run: ssh-keyscan -H ${{ secrets.VPS_SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to VPS instance
        uses: appleboy/ssh-action@master
        env:
          DOCKER_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/puorg-god-be:vps-${{ github.sha }}
        with:
          host: ${{ secrets.VPS_SSH_HOST }}
          username: ${{ secrets.VPS_SSH_USERNAME }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          envs: DOCKER_IMAGE
          script: |
            # Pull the new image
            sudo docker pull ${DOCKER_IMAGE}
            
            # Stop and remove existing container
            sudo docker stop puorg-god-be || true
            sudo docker rm puorg-god-be || true
            
            # Run new container
            sudo docker run -d --name puorg-god-be \
              -e JWT_SECRET_KEY='${{ secrets.JWT_SECRET_KEY }}' \
              -e MIGRATION_DIR='${{ secrets.MIGRATION_DIR }}' \
              -e DATABASE__TYPE='${{ secrets.DATABASE__TYPE }}' \
              -e DATABASE__USER='${{ secrets.DATABASE__USER }}' \
              -e DATABASE__PASSWORD='${{ secrets.DATABASE__PASSWORD }}' \
              -e DATABASE__HOST='${{ secrets.DATABASE__HOST }}' \
              -e DATABASE__PORT='${{ secrets.DATABASE__PORT }}' \
              -e DATABASE__NAME='${{ secrets.DATABASE__NAME }}' \
              -e MYSQL_CONTAINER_NAME='${{ secrets.MYSQL_CONTAINER_NAME }}' \
              -e JWT_EXP='${{ secrets.JWT_EXP }}' \
              -e SENDER_EMAIL='${{ secrets.SENDER_EMAIL }}' \
              -e API_KEY_EMAIL='${{ secrets.API_KEY_EMAIL }}' \
              -e REDIS_HOST='${{ secrets.REDIS_HOST }}' \
              -e REDIS_PORT='${{ secrets.REDIS_PORT }}' \
              -e REDIS_USERNAME='${{ secrets.REDIS_USERNAME }}' \
              -e REDIS_DB='${{ secrets.REDIS_DB }}' \
              -e REDIS_CONTAINER_NAME='${{ secrets.REDIS_CONTAINER_NAME }}' \
              -p 8000:8000 \
              ${DOCKER_IMAGE}